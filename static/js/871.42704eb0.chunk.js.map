{"version":3,"file":"static/js/871.42704eb0.chunk.js","mappings":"mKAAA,EAAgCA,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACXC,EAAcH,EAAQ,IAAtBG,UACSC,EAAeJ,EAAQ,KAAhCK,QAiCR,UA/BgB,WACd,MAAwCH,EAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACQC,EAAOL,IAAPK,GAaR,OAXAP,GAAU,WACRG,EACGK,gBAAgBD,GAChBE,MAAK,SAAAC,GACJJ,EAAgBI,EAAIC,KAAKC,QAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,IAE8B,IAAxBZ,EAAaa,QAClB,wBACGb,EAAac,KAAI,YAA8B,IAA3BZ,EAA0B,EAA1BA,GAAIa,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAFGd,EAKZ,OAGH,oEAEH,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["const { useEffect, useState } = require('react');\nconst { useParams } = require('react-router-dom');\nconst { default: moviedbAPI } = require('services/moviedbAPI');\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    moviedbAPI\n      .getMovieReviews(id)\n      .then(res => {\n        setMovieReviews(res.data.results);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  });\n\n  return movieReviews.length !== 0 ? (\n    <ul>\n      {movieReviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie.</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["require","useEffect","useState","useParams","moviedbAPI","default","movieReviews","setMovieReviews","id","getMovieReviews","then","res","data","results","catch","error","console","log","message","length","map","author","content"],"sourceRoot":""}