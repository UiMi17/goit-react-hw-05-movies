{"version":3,"file":"static/js/466.e11bf3ea.chunk.js","mappings":"8OAEaA,E,OAA8BC,GAAAA,IAAH,yF,SC+ExC,EAtEqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBjB,OAXAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,QAAAA,gBACmBP,GAChBQ,MAAK,SAAAC,GACJV,EAASU,EAAIC,KACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,GAAE,CAACf,IAGFF,IACE,4BACE,mBAAQkB,KAAK,SAASC,QAlBC,WAC3Bf,EAASE,EAASc,MAAMC,KAAKC,SAAWhB,EAASc,MAAMC,KAAKE,OAC7D,EAgBK,sBAGA,4BACE,gBACEC,IAAG,0CAAqCxB,EAAMyB,aAC9CC,IAAG,UAAK1B,EAAM2B,MAAX,cAEL,2BACE,2BACE,wBAAK3B,EAAM2B,SACX,oDAA4B3B,EAAM4B,oBAEpC,2BACE,sCACA,uBAAI5B,EAAM6B,eAEZ,2BACE,oCACA,wBACG7B,EAAM8B,OAAOC,KAAI,SAAAC,GAChB,OACE,yBACE,uBAAIA,EAAMC,QADHD,EAAM9B,GAIlB,gBAKT,UAACL,EAAD,YACE,mDACA,SAAC,EAAAqC,KAAD,CAAMC,GAAG,OAAOf,MAAO,CAAEC,KAAMf,EAASc,MAAMC,MAA9C,mBAGA,SAAC,EAAAa,KAAD,CAAMC,GAAG,UAAUf,MAAO,CAAEC,KAAMf,EAASc,MAAMC,MAAjD,sBAGA,SAAC,KAAD,SAKT,C","sources":["pages/MovieDetails/StyledMovieDetails.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAdditionalInfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport moviedbAPI from 'services/moviedbAPI';\nimport { StyledAdditionalInfoWrapper } from './StyledMovieDetails';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleGoBackBtnClick = () => {\n    navigate(location.state.from.pathname + location.state.from.search);\n  };\n\n  useEffect(() => {\n    moviedbAPI\n      .getMovieDetails(id)\n      .then(res => {\n        setMovie(res.data);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [id]);\n\n  return (\n    movie && (\n      <div>\n        <button type=\"button\" onClick={handleGoBackBtnClick}>\n          Go back\n        </button>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n            alt={`${movie.title} poster`}\n          />\n          <ul>\n            <li>\n              <h1>{movie.title}</h1>\n              <p>Average vote (MovieDB): {movie.vote_average}</p>\n            </li>\n            <li>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n            </li>\n            <li>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(genre => {\n                  return (\n                    <li key={genre.id}>\n                      <p>{genre.name}</p>\n                    </li>\n                  );\n                })}\n              </ul>\n            </li>\n          </ul>\n        </div>\n        <StyledAdditionalInfoWrapper>\n          <p>Additional information</p>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n          <Outlet />\n        </StyledAdditionalInfoWrapper>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledAdditionalInfoWrapper","styled","useState","movie","setMovie","id","useParams","navigate","useNavigate","location","useLocation","useEffect","moviedbAPI","then","res","data","catch","error","console","log","message","type","onClick","state","from","pathname","search","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","Link","to"],"sourceRoot":""}